r
info symbol kk
info address kk
x /32gx 0x402020
python
import gdb
from angrgdb import *
gdb.execute("b main")
gdb.execute("r")
sm = StateManager()
sm.sim(key=0x402020,size=4)
m = sm.simulation_manager()
# 需要暴露一个state的接口出来
re=m.run()
print(re)
end
python
import gdb
from angrgdb import *
gdb.execute("b main")
gdb.execute("r")
sm = StateManager()
sm.sim(key=0x402020,size=4)
m = sm.simulation_manager()
# 需要暴露一个state的接口出来
re=m.explore()
print(re)
end
q
source ~/peda/peda.py
ni
si
q
b main
r
ni
r
si
ni
si
q
python
m.active
end
python
print(m.active)
end
source ~/peda/peda.py
b main
r
x /32gx 0x402020
ni
q
q
q
q
q
q
q
q
q
b main
r
ni
ni
ni
ni
r
ni
ni
ni
ni
si
si
si
ni
ni
ni
ni
ni
nir
r
ni
q
q
q
q
q
b main
r
info address kk
info address kkk
q
r
session restore
q
r
b main
r
ni
q
q
python
IPython
end
q
python
print(type(m.active[0].solver.constraints[0]))
end
q
python
s.check() == "sat"
end
from z3 import *
x = Real('x')   # 定义实数
y = Real('y')
z = Real('z')
s = Solver()    # 定义solver
s.add(3*x + 2*y - z == 1)   # 向solver中添加公式
s.add(2*x - 2*y + 4*z == -2)
s.add(-x + 0.5*y - z == 0)
print(s.check())    # 求解
print(s.model())    # 打赢求解的实例
q
q
q
q
q
q
q
q
q
q
q
q
q
b main
r
ni
r
b foo2
c
r
c
r
b foo2
r
c
q
b foo2
r
ni
ni
q
q
set *(long long)0x402020=216173332020592768
x /32gx 0x402020
set *(unsigned long long)0x402020=216173332020592768
x /32gx 0x402020
ni
ni
x /32i $rip
ni
display /10i $rip
ni
ni
ni
si
info regs
info reg
q
q
q
q
b main
r
ni
q
w
w
q
info kkk
info kk
info address kk
set *(void*)0x402020=0x300000009000000
set *(void**)0x402020=0x300000009000000
x /32gx k
x /32gx 0x402020
ni
display %rip
display $rip
display /10i $rip
ni
q
x /32gx 0x402020
ni
source ~/ckxgdb/ckxgdb.py 
ni
ni
x /32i 0x4005cf
q
x /32i 0x4005cf
x /32gx 0x402020
q
q
b main
ni
re
r
ni
r
ni
si
q
q
b mainq
q
q
q
q
q
q
q
b foo2
r
ni
ni
q
b main
r
ni
q
q
q
q
Q
q
q
q
q
q
b main
r
ni
ni
r
q
b main
r
ni
ni
vmmap
x /32gx 0x00402000
info address bbb
info address aaa
q
